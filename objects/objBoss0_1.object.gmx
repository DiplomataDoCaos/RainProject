<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>sprEnemy</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>objEnemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Set bullet spawn timer

spawnDelay = 40;

xspawn = 0;
yspawn = 30;

xvel = 5;
yvel = 0;
hp = 150
seg = 10

alarm[0] = spawnDelay;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//End game (change to change level later)

game_end()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Bullet timer
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Move and shoot at player
//Movement
x += xvel;
if(bbox_left &lt; stage_left || bbox_right &gt; stage_right)
    xvel *= -1;

scpGetPlayerInput();
// Bullet patterns per heath level
if (hp &gt; 100)
{
    spawnDelay = 100;
    if(alarm[0] = 0)
    {
        if(instance_exists(objPlayer))
        {
            var dir = point_direction(x, y, objPlayer.x, objPlayer.y);
            scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 3, 3, 0, objBullet, -1);
        }
        
        alarm[0] = spawnDelay;
        if seg&gt;1
        {
            seg = seg - 1
        }
        else
        {
            seg = 10
        }
    }
    if(50&lt;alarm[0]) //timed bursts
    {
        if(instance_exists(objPlayer)) and 0=alarm[0]%10
        {
            //scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 25, 10, objBullHold); // THe depth order of this one is cool!
            scpCreateBulletsAt(stage_left, stage_bottom*seg/10, 315, 5, 1, 1, objBullet, -1);
        }
    }
    else //timed bursts
    {
        if(instance_exists(objPlayer)) and 0=alarm[0]%10
        {
            //scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 25, 10, objBullHold); // THe depth order of this one is cool!
            scpCreateBulletsAt(stage_right, stage_bottom*seg/10, 225, 5, 1, 1, objBullet, -1);
        }
    }
    
}
else if (hp &gt; 50)
{
    spawnDelay = 50;
    if(alarm[0] = 0)
    {
        if(instance_exists(objPlayer))
        {
            var dir = point_direction(x, y, objPlayer.x, objPlayer.y);
            scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 3, 3, 0, objBullet, -1);
            //scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 5, 10, objBullSpring);
            scpCreateBulletsAt(x,y, 0, 1, 4, 0.25, objBullHold, -1);
            scpCreateBulletsAt(x,y, 180, 1, 4, 0.25, objBullHold, -1);
            // alternative, one bick pack
            //scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 25, 10, 0.25,objBullHold); // THe depth order of this one is cool!
    
        }
        
        alarm[0] = spawnDelay;
    }
    if(alarm[0] = 25) //shoots in counter-time
    {
        if(instance_exists(objPlayer))
        {
            var dir = point_direction(x, y, objPlayer.x, objPlayer.y);
            //scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 25, 10, objBullHold); // THe depth order of this one is cool!
            scpCreateBulletsAt(xspawn + x, yspawn + y, dir, 15, 8, -0.15, objBull2Step, -1);
        }
    }
}
else
{
    spawnDealy=30
    if(alarm[0] &lt; 0)
    {
        if(instance_exists(objPlayer))
        {
            i = 25
            while i != 0
            {
                scpCreateBulletsAt(random_range(stage_left,stage_right),stage_ceiling, 270+random_range(-10,10), 1, 5, -0.25, objBullSpring, -1)
                i = i -1
            }
        }
    alarm[0] = spawnDelay;
    }
}

    
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="4" ename="objPlayer">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Kills Player

with(other)
    {
    instance_destroy();
    }
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Die

instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
