<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Variable setup, full explanation inside

/* Show a hiscore table, and is able to open and save a ini file with the data
The hi scores are apresented one at time (score roll)

The table checks for the present run values and places the player accordily

The table presents diferent behavior if is a game over or a check-up from the menu

For saves it uses sections with place and keys for scores, etc.
Remember to create the file with values before for UTG-8 and bug prevention

*/

//x positions of the score table
nameColumn = 150
dignityColumn = nameColumn + 200
scoreColumn = dignityColumn + 200
grazeColumn = scoreColumn + 100



start = 100 // start position
distance = 50 //bettewn rows

// score rolling
listLong = 1 //start, don't move
listMax = 5 //
alarm[0] = 60
listEnd = false //for auto destruction

// Read the hiscore.ini and loads the values inside

ini_open("hiscore.ini")
var i = 1 //fix with listLong
repeat(listMax)
{
    var ii = string(i);
    high[i,0]=ini_read_string(ii,"name","Error")
    high[i,1]=ini_read_real(ii,"dignity",-1)
    high[i,2]=ini_read_real(ii,"points",-1)
    high[i,3]=ini_read_real(ii,"graze",-1)
    i = i + 1
}
//Reads the actual run score and checks where the player is

position = listMax + 1
var i = 0
while i =0 and position &gt; 1 and global.gameEnd=true
{
    if high[position-1,2]&lt; global.pointsTotal
    {
        position = position - 1
    }
    else
    {
        i = 1
    }
}

//Places the player on the score table
if position &lt;= listMax
{
    //Move lower score people to below
    var i = listMax
    while i &lt;= position
    {
        high[i+1,0]=high[i,0] //Obs: this creates a new entry on the array that isn't used
        high[i+1,1]=high[i,1]
        high[i+1,2]=high[i,2]
        high[i+1,3]=high[i,3]
        i += i
    }
    
    // Puts player score in place
    high[position,0]="Teste testoso"
    high[position,1]=global.dignityTotal
    high[position,2]=global.pointsTotal
    high[position,3]=global.grazeTotal

    //saving
    var i = 1;
    repeat(listMax)
    {
        var ii = string(i);
        ini_write_string(ii,"name",high[i,0])
        ini_write_real(ii,"dignity",high[i,1])
        ini_write_real(ii,"graze",high[i,2])
        ini_write_real(ii,"points",high[i,3])
        i = i+1
    }
}
ini_close()


if global.gameEnd = true
{
    instance_create(stage_horizon_center,500,objGameOver)
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Go back to the main menu

global.gameEnd = false
room_goto(0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Auto-destruction

instance_destroy()
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Score roll timing

alarm[0]=60
if listLong &lt;listMax then listLong = listLong + 1
else if listEnd = false
{
    alarm[1]=600
    listEnd = true
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// High score skip

var enterPressed = keyboard_check_pressed(vk_enter);

if enterPressed &amp;&amp; listLong != listMax
{
    listLong = listMax
}
else if enterPressed = true
{
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///High Score Table!!

draw_set_halign(fa_center);
draw_text(stage_horizon_center,start - 50,"Jogadores melhores que você");
draw_text(nameColumn,start,"Manolo")
draw_text(dignityColumn,start,"Dignidade perdida")
draw_text(scoreColumn,start,"Nakacoins")
draw_text(grazeColumn,start,"Roçadas")

// change later to archive access
var place = 1
while place &lt;= listLong
{
    draw_text(nameColumn,start +distance *place, high[place,0])
    draw_text(dignityColumn,start +distance *place, high[place,1])
    draw_text(scoreColumn,start +distance *place, high[place,2])
    draw_text(grazeColumn,start +distance *place, high[place,3])
    place = place + 1
}

if global.gameEnd = true &amp;&amp; place &gt; listMax
{
    draw_set_colour(c_white)
    draw_text(stage_horizon_center,start +distance * (place-0.5),"Você")
    draw_text(nameColumn,start +distance *place,"Teste testoso")
    draw_text(dignityColumn,start +distance *place, global.dignityTotal)
    draw_text(scoreColumn,start +distance *place, global.pointsTotal)
    draw_text(grazeColumn,start +distance *place, global.grazeTotal)
}

draw_set_colour(c_red)
draw_set_halign(fa_left);
draw_text(0,400,string(position))
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
